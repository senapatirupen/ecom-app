info:
  component: API Service

spring:
  application:
    name: api-service
#    aop:
#        proxyTargetClass: true
#        # Added to fix -  java.lang.IllegalArgumentException: error at ::0 can't find referenced pointcut hystrixCommandAnnotationPointcut
#        auto: false

server:
  port: 7771

endpoints:
  health:
    sensitive: false

management:
  security:
    enabled: false
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles:
        hystrix: 0.90, 0.99
      percentiles-histogram:
        hystrix: true
  endpoints:
    metrics:
      enabled: true
    web:
      exposure:
        include: '*'
    prometheus:
      enabled: true

#security:
#  oauth2:
#    resource:
#      userInfoUri: https://localhost:9001/auth/user


hystrix:
  threadpool:
    default:
      # Maximum number of concurrent requests when using thread pools (Default: 10)
      coreSize: 2
      # Maximum LinkedBlockingQueue size - -1 for using SynchronousQueue (Default: -1)
      maxQueueSize: -1
      # Queue size rejection threshold (Default: 5)
      queueSizeRejectionThreshold: 5
  command:
    default:
      circuitBreaker:
        sleepWindowInMilliseconds: 3000
        requestVolumeThreshold: 2
      execution:
        isolation:
          # strategy: SEMAPHORE, no thread pool but timeout handling stops to work
          strategy: THREAD
          thread:
            timeoutInMilliseconds: 6000
      metrics:
        healthSnapshot:
          intervalInMilliseconds: 10



#ribbon:
#  ConnectTimeout: 100
#  ReadTimeout: 3000

app:
  ConnectTimeout: 100
  ReadTimeout: 5000

eureka:
  instance:
    leaseRenewalIntervalInSeconds: 3
    leaseExpirationDurationInSeconds: 2
    metadataMap:
      instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}

  client:
    registryFetchIntervalSeconds: 5
    instanceInfoReplicationIntervalSeconds: 5
    initialInstanceInfoReplicationIntervalSeconds: 5
    serviceUrl:
      defaultZone: ${vcap.services.${PREFIX:}eureka.credentials.uri:http://user:password@localhost:8761}/eureka/
    fetchRegistry: true

logging:
  level:
    root: WARN
    com.example.ecom: INFO
    # Set DEBUG level on Hystrix to get an error message when a fallback method is used.
    com.netflix.hystrix: DEBUG
